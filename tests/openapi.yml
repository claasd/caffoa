openapi: "3.0.2"
info:
  title: Demo API
  version: "1.0"


components:

  schemas:
    error:
      type: object
      properties:
        status:
          type: string
          description: Single string based code describing the error.
        message:
          type: string
          description: Human readable error message.
      required:
        - status
        - message

    user:
      type: object
      properties:
        name:
          type: string
        address:
          $ref: "base.openapi.yml#/components/schemas/address"
        birthdate:
          type: string
          format: date
        emails:
          type: array
          items:
            type: string
        type:
          type: string
          enum: [simple]
          default: simple

      required:
        - type

    guestUser:
      type: object
      properties:
        email:
          type: string
        type:
          type: string
          enum: [ guest ]
          default: guest
      required:
        - type

    userWithId:
      allOf:
        - $ref: "#/components/schemas/user"
        - type: object
          properties:
            id:
              type: string

    anyUser:
      oneOf:
        - $ref: "#/components/schemas/userWithId"
        - $ref: "#/components/schemas/guestUser"
      discriminator:
        propertyName: type
        mapping:
          simple: "#/components/schemas/userWithId"
          guest: "#/components/schemas/guestUser"


  responses:
    error:
      description: Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
paths:
  "/users":
    get:
      tags:
        - user
      operationId: users-get
      description: get information about the users
      responses:
        "200":
          description: return user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/anyUser"
        "400":
          $ref: "#/components/responses/error"
    post:
      operationId: user-post
      description: create or update a user without return test
      requestBody:
        description: a full user
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/user"
                - $ref: "#/components/schemas/guestUser"
              discriminator:
                propertyName: type
                mapping:
                  simple: "#/components/schemas/user"
                  guest: "#/components/schemas/guestUser"
      responses:
        "200":
          description: User was updated

        "201":
          description: User was created
  "/users/{userId}":
    parameters:
      - name: userId
        in: path
        required: true
        description: the user id.
        schema:
          type: string

    put:
      operationId: user-put
      description: create or update a user
      requestBody:
        description: a full user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/anyUser"

      responses:
        "200":
          description: User was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/anyUser"
        "201":
          description: User was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/anyUser"

    patch:
      operationId: user-patch
      description: update a user
      requestBody:
        description: a full user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"

      responses:
        "200":
          description: User was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userWithId"
    get:
      tags:
        - user
      operationId: user-get
      description: get information about the users
      responses:
        "200":
          description: return user object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userWithId"
