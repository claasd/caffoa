openapi: "3.0.2"
info:
  title: Demo API
  version: "1.0"


components:

  schemas:
    error:
      type: object
      properties:
        status:
          type: string
          description: Single string based code describing the error.
        message:
          type: string
          description: Human readable error message.
      required:
        - status
        - message

    user:
      type: object
      properties:
        name:
          type: string
        address:
          $ref: "base.openapi.yml#/components/schemas/address"
        birthdate:
          type: string
          format: date
        emails:
          type: array
          items:
            type: string

    userWithId:
      allOf:
        - $ref: "#/components/schemas/user"
        - type: object
          properties:
            id:
              type: string


  responses:
    error:
      description: Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
paths:
  "/users":
    get:
      tags:
        - user
      operationId: users-get
      description: get information about the users
      responses:
        "200":
          description: return user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
        "400":
          $ref: "#/components/responses/error"

  "/users/{userId}":
    parameters:
      - name: userId
        in: path
        required: true
        description: Start of the slice.
        schema:
          type: string
    put:
      operationId: user-put
      description: create or update a user
      responses:
        "200":
          description: User was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "201":
          description: User was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
    post:
      operationId: user-post
      description: create or update a user without return test
      responses:
        "200":
          description: User was updated

        "201":
          description: User was created

    get:
      tags:
        - user
      operationId: user-get
      description: get information about the users
      responses:
        "200":
          description: return user object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
